from PIL import Image

def encrypt_image(image_path):
    img = Image.open(image_path)
    width, height = img.size
    
    # Encryption algorithm: Swapping pixel values
    for y in range(height):
        for x in range(width):
            r, g, b = img.getpixel((x, y))
            img.putpixel((x, y), (g, b, r))  # Example of swapping pixel values
    
    encrypted_image_path = image_path.split('.')[0] + '_encrypted.png'
    img.save(encrypted_image_path)
    return encrypted_image_path

def decrypt_image(encrypted_image_path):
    img = Image.open(encrypted_image_path)
    width, height = img.size
    
    # Decryption algorithm: Reverse of the encryption algorithm
    for y in range(height):
        for x in range(width):
            r, g, b = img.getpixel((x, y))
            img.putpixel((x, y), (b, r, g))  # Reversing the pixel swap
    
    decrypted_image_path = encrypted_image_path.split('_encrypted')[0] + '_decrypted.png'
    img.save(decrypted_image_path)
    return decrypted_image_path

# Example usage:
input_image_path = 'input_image.png'
encrypted_image_path = encrypt_image(input_image_path)
print("Image encrypted:", encrypted_image_path)

decrypted_image_path = decrypt_image(encrypted_image_path)
print("Image decrypted:", decrypted_image_path)
